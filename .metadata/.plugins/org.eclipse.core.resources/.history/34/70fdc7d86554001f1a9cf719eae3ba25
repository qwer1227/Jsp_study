package hr.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import hr.utils.ConnectionUtils;
import hr.vo.DeptDetail;
import hr.vo.DeptList;

public class DeptDao {

	/***
	 * 부서아이디를 전달받아서 해당 부서의 상세정보를 반환한다
	 * @param deptId 조회할 부서아이디
	 * @return 부서상세정보
	 * @throws SQLException
	 */
	public DeptDetail getDeptDetail(int deptId)throws SQLException{
		String sql = """
				select *
				from dept_detail_view
				where department_id= ?
				""";
		
		DeptDetail dept = null;
		
		Connection con = ConnectionUtils.getConnection();
		
		PreparedStatement pstmt = con.prepareStatement(sql);
		
		pstmt.setInt(1, deptId);
		
		return dept;
		
	}
	
	/**
	 * 모든 부서정보를 반환한다
	 * @return 부서목록
	 * @throws SQLException
	 */
	public List<DeptList> findAllDepts() throws SQLException{
		String sql = """
				SELECT DEPARTMENT_ID, DEPARTMENT_NAME, FIRST_NAME, CITY, CNT
				FROM DEPT_DETAIL_VIEW
				WHERE MANAGER_ID IS NOT NULL
				ORDER BY DEPARTMENT_ID ASC
				""";
		
		List<DeptList> depts = new ArrayList<DeptList>();
		Connection con = ConnectionUtils.getConnection();
		PreparedStatement pstmt = con.prepareStatement(sql);
		ResultSet rs = pstmt.executeQuery();
		
		while(rs.next()) {
			DeptList vo = new DeptList();
			vo.setId(rs.getInt("department_id"));
			vo.setName(rs.getString("department_name"));
			vo.setManagerName(rs.getString("first_name"));
			vo.setCity(rs.getString("city"));
			vo.setCnt(rs.getInt("cnt"));
			
			depts.add(vo);
		}
		rs.close();
		pstmt.close();
		con.close();
		return depts;
	}
}
